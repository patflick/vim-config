snippet doxfile "/** file doxygen */"
/**
 * @file    ${1:filename}
 * @ingroup ${2:group}
 * @author  Patrick Flick <patrick.flick@gmail.com>
 * @brief   ${3:descr}
 *
 * Copyright (c) 2014 Georgia Institute of Technology. All Rights Reserved.
 *
 * TODO add Licence
 */
endsnippet

snippet guard "include guard"
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL}

#endif // ${1/([A-Za-z0-9_]+).*/$1/}
endsnippet

snippet namesp "namespace"
namespace ${1:SYMBOL}
{
${2:}
} // namespace ${1/([A-Za-z0-9_]+).*/$1/}
endsnippet

snippet cout "std::cout"
std::cout << "${1:Hello World!}" << std::endl;
endsnippet

snippet cerr "std::cerr"
std::cerr << "${1:Ooops}" << std::endl;
endsnippet

snippet mpi_main "MPI main()"
int main(int argc, char *argv[])
{
    // set up MPI
    MPI_Init(&argc, &argv);

    // get communicator size and my rank
    MPI_Comm comm = MPI_COMM_WORLD;
    int p, rank;
    MPI_Comm_size(comm, &p);
    MPI_Comm_rank(comm, &rank);

    /* code */
    ${1:/* ... */}

    // finalize MPI
    MPI_Finalize();
    return 0;
}
endsnippet
